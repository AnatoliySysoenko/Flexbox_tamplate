/** @format */
/** @format */
/*! normalize-scss | MIT/GPLv2 License | bit.ly/normalize-scss */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in
 *    IE on Windows Phone and in iOS.
 */
html {
  line-height: 1.15;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers (opinionated).
 */
body {
  margin: 0;
}

/**
 * Add the correct display in IE 9-.
 */
article,
aside,
footer,
header,
nav,
section {
  display: block;
}

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/* Grouping content
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 */
figcaption,
figure {
  display: block;
}

/**
 * Add the correct margin in IE 8.
 */
figure {
  margin: 1em 40px;
}

/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  -webkit-box-sizing: content-box;
          box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */
}

/**
 * Add the correct display in IE.
 */
main {
  display: block;
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/* Links
   ========================================================================== */
/**
 * 1. Remove the gray background on active links in IE 10.
 * 2. Remove gaps in links underline in iOS 8+ and Safari 8+.
 */
a {
  background-color: transparent;
  /* 1 */
  -webkit-text-decoration-skip: objects;
  /* 2 */
}

/* Text-level semantics
   ========================================================================== */
/**
 * 1. Remove the bottom border in Chrome 57- and Firefox 39-.
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
  /* 2 */
}

/**
 * Prevent the duplicate application of `bolder` by the next rule in Safari 6.
 */
b,
strong {
  font-weight: inherit;
}

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder;
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/**
 * Add the correct font style in Android 4.3-.
 */
dfn {
  font-style: italic;
}

/**
 * Add the correct background and color in IE 9-.
 */
mark {
  background-color: #ff0;
  color: #000;
}

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/* Embedded content
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 */
audio,
video {
  display: inline-block;
}

/**
 * Add the correct display in iOS 4-7.
 */
audio:not([controls]) {
  display: none;
  height: 0;
}

/**
 * Remove the border on images inside links in IE 10-.
 */
img {
  border-style: none;
}

/**
 * Hide the overflow in IE.
 */
svg:not(:root) {
  overflow: hidden;
}

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers (opinionated).
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: sans-serif;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */
}

/**
 * Show the overflow in IE.
 */
button {
  overflow: visible;
}

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none;
}

/**
 * 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
 *    controls in Android 4.
 * 2. Correct the inability to style clickable types in iOS and Safari.
 */
button,
html [type=button],
[type=reset],
[type=submit] {
  -webkit-appearance: button;
  /* 2 */
}

button,
[type=button],
[type=reset],
[type=submit] {
  /**
   * Remove the inner border and padding in Firefox.
   */
  /**
   * Restore the focus styles unset by the previous rule.
   */
}
button::-moz-focus-inner,
[type=button]::-moz-focus-inner,
[type=reset]::-moz-focus-inner,
[type=submit]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}
button:-moz-focusring,
[type=button]:-moz-focusring,
[type=reset]:-moz-focusring,
[type=submit]:-moz-focusring {
  outline: 1px dotted ButtonText;
}

/**
 * Show the overflow in Edge.
 */
input {
  overflow: visible;
}

/**
 * 1. Add the correct box sizing in IE 10-.
 * 2. Remove the padding in IE 10-.
 */
[type=checkbox],
[type=radio] {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type=number]::-webkit-inner-spin-button,
[type=number]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type=search] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
  /**
   * Remove the inner padding and cancel buttons in Chrome and Safari on macOS.
   */
}
[type=search]::-webkit-search-cancel-button, [type=search]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em;
}

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  color: inherit;
  /* 2 */
  white-space: normal;
  /* 1 */
}

/**
 * 1. Add the correct display in IE 9-.
 * 2. Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */
}

/**
 * Remove the default vertical scrollbar in IE.
 */
textarea {
  overflow: auto;
}

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in Edge, IE, and Firefox.
 */
details {
  display: block;
}

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item;
}

/*
 * Add the correct display in IE 9-.
 */
menu {
  display: block;
}

/* Scripting
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 */
canvas {
  display: inline-block;
}

/**
 * Add the correct display in IE.
 */
template {
  display: none;
}

/* Hidden
   ========================================================================== */
/**
 * Add the correct display in IE 10-.
 */
[hidden] {
  display: none;
}

/** @format */
/**
 * /* xl
 *
 * @format
 */
/* lg */
/* md */
/* sm */
/* xs */
/* xx */
/** @format */
/** @format */
*,
*::before,
*::after {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
}

html {
  font-family: "Roboto", sans-serif;
  font-size: 14px;
  line-height: 1.5em;
  color: #eeeeee;
}

body {
  overflow-x: hidden;
  width: 100%;
  max-width: 1380px;
  margin: 0 auto;
  opacity: 1;
  background-color: #d8b036;
  background-image: url(../img/global-bg.jpg);
  background-attachment: fixed;
  background-position: top center;
  background-size: cover;
}

h1 {
  font-family: "Lora", serif;
}

a {
  text-decoration: none;
  color: #eeeeee;
}

p {
  color: #cccccc;
}

.container {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
}

.img-responsive {
  display: block;
  width: 100%;
  max-width: 100%;
  height: auto;
}

.widget {
  background-color: rgba(0, 0, 0, 0.5);
  padding: 15px;
  border-radius: 7px;
  margin: 0 0 15px;
  color: #eeeeee;
}
.widget h3 {
  margin-top: 5px;
  padding-bottom: 10px;
  font-family: "Lora", serif;
  font-weight: 300;
  letter-spacing: 0.092em;
  border-bottom: 1px solid rgba(0, 0, 0, 0.4);
}
.widget p {
  line-height: 2em;
}

/** @format */
.header {
  overflow: hidden;
  min-height: 100px;
  margin-bottom: 30px;
  border-radius: 0 0 7px 7px;
  background-color: rgba(0, 0, 0, 0.5);
}

/** @format */
.header-logo {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
}
.header-logo__image {
  display: block;
}
.header-logo__title {
  display: block;
  margin-bottom: 15px;
  font-family: "Lora", serif;
  font-weight: 300;
}
.header-logo__description {
  letter-spacing: 0.2em;
  font-weight: 700;
  text-align: center;
}

/** @format */
.header-menu {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  background: rgba(0, 0, 0, 0.3);
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
}
.header-menu__btn {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  background-color: rgba(0, 0, 0, 0.2);
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  position: relative;
  width: 50px;
  height: 50px;
  cursor: pointer;
}
.header-menu__btn--active .header-menu__btn-row:nth-of-type(1) {
  top: 9px;
  -webkit-transform: rotate(135deg);
      -ms-transform: rotate(135deg);
          transform: rotate(135deg);
}
.header-menu__btn--active .header-menu__btn-row:nth-of-type(2) {
  opacity: 0;
}
.header-menu__btn--active .header-menu__btn-row:nth-of-type(3) {
  top: 9px;
  -webkit-transform: rotate(-135deg);
      -ms-transform: rotate(-135deg);
          transform: rotate(-135deg);
}
.header-menu__btn-row {
  margin-top: 15px;
  position: absolute;
  top: 0;
  left: 10px;
  display: block;
  width: 60%;
  height: 2px;
  -webkit-transition: 0.25s ease-in-out;
  -o-transition: 0.25s ease-in-out;
  transition: 0.25s ease-in-out;
  -webkit-transform: rotate(0deg);
      -ms-transform: rotate(0deg);
          transform: rotate(0deg);
  opacity: 1;
  border-radius: 2.5px;
  background-color: #eeeeee;
}
.header-menu__btn-row:nth-of-type(1) {
  top: 0;
}
.header-menu__btn-row:nth-of-type(2) {
  top: 9px;
}
.header-menu__btn-row:nth-of-type(3) {
  top: 18px;
}
.header-menu__list {
  margin: 0;
  padding: 0;
  list-style: none;
}
.header-menu__list-item a {
  -webkit-transition: color 0.5s;
  -o-transition: color 0.5s;
  transition: color 0.5s;
}
.header-menu__list-item a:focus, .header-menu__list-item a:hover {
  color: #e12727;
  background-color: rgba(0, 0, 0, 0.3);
  text-shadow: 1px 1px 3px #000000, 1px 1px 10px #000000;
}
.header-menu__list-item.active a {
  color: #bb1a1a;
  background-color: rgba(0, 0, 0, 0.4);
  text-shadow: 1px 1px 3px #000000, 1px 1px 10px #000000;
}
.header-menu__list-link {
  display: block;
  padding: 10px 15px;
  border-radius: 4px;
}

/** @format */
.main {
  -webkit-box-flex: 1;
      -ms-flex-positive: 1;
          flex-grow: 1;
  -webkit-box-ordinal-group: 3;
      -ms-flex-order: 2;
          order: 2;
}

/** @format */
.main-breadcrumb {
  width: 100%;
  margin-bottom: 30px;
  padding: 8px 12px;
  text-align: right;
  letter-spacing: 0.1428em;
  background: -webkit-gradient(linear, left top, right top, from(rgba(0, 0, 0, 0)), to(rgba(0, 0, 0, 0.8)));
  background: -o-linear-gradient(left, rgba(0, 0, 0, 0) 0%, rgba(0, 0, 0, 0.8) 100%);
  background: linear-gradient(to right, rgba(0, 0, 0, 0) 0%, rgba(0, 0, 0, 0.8) 100%);
  border-radius: 7px;
}
.main-breadcrumb span {
  position: relative;
  color: #cccccc;
  margin-right: 7px;
}
.main-breadcrumb a {
  font-weight: bold;
}
.main-breadcrumb i {
  color: #cccccc;
  font-weight: bold;
}

/** @format */
.main-content__title {
  background: -webkit-gradient(linear, left top, right top, from(rgba(0, 0, 0, 0.8)), color-stop(90%, rgba(0, 0, 0, 0.5)), to(rgba(0, 0, 0, 0)));
  background: -o-linear-gradient(left, rgba(0, 0, 0, 0.8) 0%, rgba(0, 0, 0, 0.5) 90%, rgba(0, 0, 0, 0) 100%);
  background: linear-gradient(to right, rgba(0, 0, 0, 0.8) 0%, rgba(0, 0, 0, 0.5) 90%, rgba(0, 0, 0, 0) 100%);
  border-radius: 7px;
  margin: 30px 0;
  padding: 8px 12px;
  font-family: "Lora", serif;
  font-weight: 300;
  line-height: 1.5em;
}
.main-content__body {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  margin: -7.5px -7.5px 30px -7.5px;
}

/** @format */
.main-content__item {
  padding: 7.5px;
  position: relative;
}
.main-content__item-wrapper {
  position: relative;
  border: 5px solid rgba(0, 0, 0, 0.5);
  border-radius: 7px;
  overflow: hidden;
}
.main-content__item-title {
  position: absolute;
  top: 0;
  left: 0;
  display: block;
  overflow: hidden;
  width: 100%;
  width: 100%;
  height: 30px;
  margin: 0;
  padding: 7px;
  -webkit-transition: color 0.5s;
  -o-transition: color 0.5s;
  transition: color 0.5s;
  text-align: center;
  white-space: nowrap;
  letter-spacing: 0.0714em;
  -o-text-overflow: ellipsis;
     text-overflow: ellipsis;
  background-color: rgba(0, 0, 0, 0.5);
  font-size: 1rem;
  font-weight: 300;
  line-height: 1em;
  text-shadow: 1px 1px 3px #000000, 1px 1px 10px #000000;
}
.main-content__item-excerpt {
  position: absolute;
  top: 210%;
  left: 0;
  width: 100%;
  height: calc(100% - 27px);
  margin: 0;
  padding: 15px;
  -webkit-transition: top 0.5s ease-out, background-color 0.5s ease-out;
  -o-transition: top 0.5s ease-out, background-color 0.5s ease-out;
  transition: top 0.5s ease-out, background-color 0.5s ease-out;
  text-align: center;
}
.main-content__item:hover .main-content__item-excerpt {
  display: block;
  top: 30px;
  background-color: rgba(0, 0, 0, 0.8);
  color: #eeeeee;
}
.main-content__item:hover .main-content__item-title {
  color: #e12727;
  background-color: rgba(0, 0, 0, 0.8);
}

/** @format */

.widget:last-of-type {
  margin-bottom: 0;
}

.widget-search form {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  position: relative;
  margin: 15px 0 7px;
}
.widget-search__input {
  width: 100%;
  padding: 7px 8px 7px 40px;
  -o-text-overflow: ellipsis;
     text-overflow: ellipsis;
  font-size: 0.85rem;
  border-radius: 4px;
  border: 1px solid rgba(238, 238, 238, 0.15);
  background-color: rgba(238, 238, 238, 0.1);
  font-family: "Roboto", sans-serif;
  font-weight: 400;
}
.widget-search__input::-webkit-input-placeholder {
  color: #cccccc;
}
.widget-search__input::-moz-placeholder {
  color: #cccccc;
}
.widget-search__input:-ms-input-placeholder {
  color: #cccccc;
}
.widget-search__input::-ms-input-placeholder {
  color: #cccccc;
}
.widget-search__input::placeholder {
  color: #cccccc;
}
.widget-search__submit {
  position: absolute;
  top: 0;
  bottom: 1px;
  left: 1px;
  padding: 5px 7px;
  cursor: pointer;
  color: #eeeeee;
  border: none;
  border-right: 1px solid rgba(238, 238, 238, 0.1);
  background-color: transparent;
}

.widget-categories__list {
  margin: 0;
  padding: 0;
  list-style: none;
}
.widget-categories__item a {
  display: block;
  padding: 5px 0;
  -webkit-transition: padding-left 0.5s;
  -o-transition: padding-left 0.5s;
  transition: padding-left 0.5s;
}
.widget-categories__item a:hover {
  padding-left: 10px;
  color: #e12727;
  background: rgba(0, 0, 0, 0.5);
  border-radius: 7px;
  text-shadow: 1px 1px 3px #000000, 1px 1px 10px #000000;
}

.widget-text p {
  line-height: 2em;
}
.widget-text p:last-child {
  margin-bottom: 0;
}

/** @format */
.right {
  -webkit-box-ordinal-group: 4;
      -ms-flex-order: 3;
          order: 3;
  margin-bottom: 15px;
}

.widget-news__item a:focus h4, .widget-news__item a:hover h4 {
  color: #e12727;
  text-shadow: 1px 1px 3px #000000, 1px 1px 10px #000000;
}
.widget-news__item a:hover .widget-news__item-wrapper {
  background: -o-radial-gradient(center, ellipse, rgba(0, 0, 0, 0.65) 0%, rgba(0, 0, 0, 0) 100%);
  background: radial-gradient(ellipse at center, rgba(0, 0, 0, 0.65) 0%, rgba(0, 0, 0, 0) 100%);
}
.widget-news__item a:hover img {
  -webkit-transform: scale(1.2);
      -ms-transform: scale(1.2);
          transform: scale(1.2);
}
.widget-news__item a:hover .widget-news__item-excerpt {
  color: #eeeeee;
}
.widget-news__item-wrapper {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  margin: 0 -15px 7.5px;
  padding: 0 15px 7.5px;
}
.widget-news__item-title {
  display: block;
  overflow: hidden;
  width: 100%;
  margin: 0 0 10px;
  white-space: nowrap;
  -o-text-overflow: ellipsis;
     text-overflow: ellipsis;
  letter-spacing: 1px;
  -webkit-transition: color 0.5s;
  -o-transition: color 0.5s;
  transition: color 0.5s;
  font-weight: 300;
}
.widget-news__item-image {
  width: 75px;
  height: 75px;
  overflow: hidden;
  border-radius: 4px;
}
.widget-news__item-image img {
  -webkit-transition: -webkit-transform 0.5s;
  transition: -webkit-transform 0.5s;
  -o-transition: transform 0.5s;
  transition: transform 0.5s;
  transition: transform 0.5s, -webkit-transform 0.5s;
}
.widget-news__item-excerpt {
  width: calc(100% - 75px);
  padding-left: 10px;
  -webkit-transition: color 0.5s;
  -o-transition: color 0.5s;
  transition: color 0.5s;
  color: #cccccc;
  display: -webkit-box;
  overflow: hidden;
  max-height: 75px;
  font-size: 13px;
  line-height: 19px;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: 4;
}

/** @format */
.footer {
  margin-bottom: 30px;
}
.footer-top {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  margin-right: -7.5px;
  margin-left: -7.5px;
}
.footer-top__item {
  padding: 0 7.5px;
  color: #eeeeee;
  margin-bottom: 15px;
}
.footer-top__item p {
  margin-bottom: 0;
}
.footer-bottom {
  text-align: center;
}
.footer-bottom h3 {
  max-width: 300px;
  margin: 0 auto;
}
.footer-bottom p {
  margin-bottom: 0;
}
@media (min-width: 768px) {
  .header-logo {
    padding: 45px 15px;
  }
  .header-logo__image {
    max-width: 400px;
    margin-bottom: 30px;
  }
  .header-logo__title {
    font-size: 3rem;
    line-height: 3.5rem;
    letter-spacing: 0.119em;
  }
  .header-menu__btn {
    display: none;
  }
  .header-menu__list {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
  }
  .header-menu__list-link {
    margin: 5px;
  }
  .main-content__title {
    font-size: 2rem;
    letter-spacing: 0.107em;
  }
  .main-content__item {
    -webkit-box-flex: 0;
        -ms-flex: 0 0 33.3333%;
            flex: 0 0 33.3333%;
  }
}
@media (min-width: 992px) {
  .left {
    -webkit-box-flex: 0;
        -ms-flex: 0 0 220px;
            flex: 0 0 220px;
    -webkit-box-ordinal-group: 2;
        -ms-flex-order: 1;
            order: 1;
    margin-bottom: 15px;
  }
  .footer-top__item {
    -webkit-box-flex: 0;
        -ms-flex: 0 0 25%;
            flex: 0 0 25%;
  }
}
@media (min-width: 1200px) {
  body {
    padding: 0 30px;
  }
  .main {
    -webkit-box-flex: 0;
        -ms-flex: 0 0 calc(100% - 220px - 240px);
            flex: 0 0 calc(100% - 220px - 240px);
    padding-right: 30px;
    padding-left: 30px;
  }
  .right {
    -webkit-box-flex: 0;
        -ms-flex: 0 0 240px;
            flex: 0 0 240px;
    -webkit-box-ordinal-group: 3;
        -ms-flex-order: 2;
            order: 2;
  }
  .right .widget-news {
    width: 240px;
  }
  .footer-top {
    max-width: 1380px;
  }
}
@media (max-width: 1199.8px) {
  body {
    padding: 0 15px;
  }
  .container {
    -ms-flex-wrap: wrap;
        flex-wrap: wrap;
  }
}
@media (max-width: 1199.8px) and (min-width: 992px) {
  .main {
    -webkit-box-flex: 0;
        -ms-flex: 0 0 calc(100% - 220px);
            flex: 0 0 calc(100% - 220px);
    padding-right: 0;
    padding-left: 30px;
  }
  .right {
    width: 100%;
  }
}
@media (max-width: 991.8px) {
  .main {
    -webkit-box-ordinal-group: 2;
        -ms-flex-order: 1;
            order: 1;
  }
}
@media (max-width: 991.8px) and (min-width: 576px) {
  .left {
    width: 50%;
    -webkit-box-ordinal-group: 3;
        -ms-flex-order: 2;
            order: 2;
    padding-right: 7.5px;
  }
  .right {
    width: 50%;
    padding-left: 7.5px;
  }
  .footer-top__item {
    -webkit-box-flex: 0;
        -ms-flex: 0 0 50%;
            flex: 0 0 50%;
  }
}
@media (max-width: 767.8px) {
  .header-logo {
    padding: 30px 15px;
  }
  .header-logo__description {
    font-size: 0.875rem;
    letter-spacing: 0.1em;
    line-height: 1.25em;
    font-weight: 400;
  }
  .header-menu__btn {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
  }
  .header-menu__list {
    display: none;
    width: 100%;
    text-align: center;
    -webkit-box-pack: center;
        -ms-flex-pack: center;
            justify-content: center;
  }
  .header-menu__list--active {
    display: block;
  }
  .header-menu__list-item:last-of-type {
    padding-bottom: 5px;
  }
  .header-menu__list-link {
    margin: 0 5px;
  }
}
@media (max-width: 767.8px) and (min-width: 480px) {
  .header-logo__image {
    max-width: 300px;
    margin-bottom: 15px;
  }
  .main-content__item {
    -webkit-box-flex: 0;
        -ms-flex: 0 0 50%;
            flex: 0 0 50%;
  }
}
@media (max-width: 767.8px) and (min-width: 576px) {
  .header-logo__title {
    font-size: 2rem;
    line-height: 2.5rem;
    letter-spacing: 0.178em;
  }
  .main-content__title {
    font-size: 1.5rem;
    letter-spacing: 0.1428em;
  }
}
@media (max-width: 575.8px) {
  .header-logo__title {
    font-size: 1.5rem;
    line-height: 2rem;
    letter-spacing: 0.238em;
  }
  .main-content__title {
    font-size: 1rem;
    letter-spacing: 0.214em;
  }
  .left {
    -webkit-box-ordinal-group: 3;
        -ms-flex-order: 2;
            order: 2;
    width: 100%;
    margin-bottom: 15px;
  }
  .right {
    width: 100%;
  }
  .footer-top__item {
    width: 100%;
  }
}
@media (max-width: 479.8px) {
  .header-logo__image {
    width: 80%;
    margin-bottom: 15px;
  }
  .main-content__item {
    -webkit-box-flex: 0;
        -ms-flex: 0 0 100%;
            flex: 0 0 100%;
  }
}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */